plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
}

def version_plugin = System.getenv("GITHUB_REF_NAME") ?: github_ref_name
def version_spigot_api = System.getenv("SPIGOT_VERSION") ?: spigot_version
def version_spigot = "${version_spigot_api}-R0.1-SNAPSHOT"
group = 'com.github.m4kvn.spigot'
version = "${version_plugin}-${version_spigot}"

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot:$version_spigot"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "io.insert-koin:koin-core:3.2.2"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jar {
    exclude "META-INF/versions/9/module-info.class"
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
}

task copyJarToServer(type: Copy) {
    from jar
    into "server/plugins"
}

build.dependsOn copyJarToServer